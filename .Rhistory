timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3,key_glyph = "rect")
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE,key_glyph = "rect")
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos",,key_glyph = "rect")
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos",key_glyph = "rect")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos",key_glyph = "poin")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos",key_glyph = "point")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone),,key_glyph = "point")
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone),key_glyph = "point")
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "left"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0)
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
#timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0,key_glyph = "point")
print(timeline_plot)
dev.off()
print(timeline_plot)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=1)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0,key_glyph = "point")
print(timeline_plot)
dev.off()
print(timeline_plot)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align=rep('r', 5),format ="latex", booktabs = TRUE, caption="Egresos por clasificación económica 2008-2016 en Bolívares Fuertes")%>%
kable_styling(latex_options = c("scale_down","HOLD_position"))%>%
column_spec(1, width = "10em") %>%
row_spec(c(1,34), bold = TRUE)
library(dplyr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align=rep('r', 5),format ="latex", booktabs = TRUE, caption="Egresos por clasificación económica 2008-2016 en Bolívares Fuertes")%>%
kable_styling(latex_options = c("scale_down","HOLD_position"))%>%
column_spec(1, width = "10em") %>%
row_spec(c(1,34), bold = TRUE)
library(dplyr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", booktabs = TRUE, caption="Egresos por clasificación económica 2008-2016 en Bolívares Fuertes")%>%
kable_styling(latex_options = c("scale_down","HOLD_position"))%>%
column_spec(1, width = "10em") %>%
row_spec(c(1,34), bold = TRUE)
library(dplyr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", booktabs = TRUE, caption="Estatus de instituciones culturales")%>%
kable_styling(latex_options = c("scale_down","HOLD_position"))%>%
column_spec(1, width = "10em") %>%
row_spec(c(1,34), bold = TRUE)
library(dplyr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", booktabs = TRUE, caption="Estatus de instituciones culturales")%>%
kable_styling(latex_options = c("scale_down","HOLD_position"))%>%
column_spec(1, width = "10em") %>%
row_spec(c(1,34), bold = TRUE)
library(dplyr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=TRUE,booktabs = TRUE, caption="Estatus de instituciones culturales")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat header"),repeat_header_text = "(cont.)")
library(dplyr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat header"),repeat_header_text = "(cont.)")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales, 1818-2017")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat header"),repeat_header_text = "(cont.)")
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales, 1818-2017")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat header"))
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales, 1818-2017")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat_header"),repeat_header_text = "(cont.)")
citr:::insert_citation()
citr:::insert_citation()
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales, 1818-2017")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat_header"),repeat_header_text = "(cont.)")
citr:::insert_citation()
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales, 1818-2017")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat_header"),repeat_header_text = "(cont.)")
df$date <- with(df, ymd(sprintf('%04d%02d%02d', year, month, 1)))
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE    ,fig.path = 'figurasR/',
echo = TRUE, warning = FALSE, message = FALSE,
fig.pos="H",fig.align="center",out.width="95%",
cache=FALSE)
library(ggplot2)
library(scales)
library(lubridate) # Opera con fechas y sus formatos
library(ggrepel) #Evita la superposición de textos en los gráficos
library(formatR) # Arregla los códigos r muy largos
library(knitr)
library(kableExtra)
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read.csv('hitos.csv', header= TRUE, sep= ";")
kable(df,  align="cclc",format ="latex", longtable=T,booktabs = TRUE, caption="Estatus de instituciones culturales, 1818-2017")%>%
kable_styling(latex_options = c("scale_down","HOLD_position","repeat_header"),repeat_header_text = "(cont.)")
df$date <- with(df, ymd(sprintf('%04d%02d%02d', year, month, 1)))
df <- df[with(df, order(date)), ]
head(df)
status_levels <- c("Existente", "Renovada", "Nueva Etapa", "Cerrada")
status_colors <- c("#0070C0", "#00B050", "#FFC000", "#C00000")
df$status <- factor(df$status, levels=status_levels, ordered=TRUE)
positions <- c(0.5, -0.5, 1.0, -1.0, 1.5, -1.5)
directions <- c(1, -1)
line_pos <- data.frame(
"date"=unique(df$date),
"position"=rep(positions, length.out=length(unique(df$date))),
"direction"=rep(directions, length.out=length(unique(df$date)))
)
df <- merge(x=df, y=line_pos, by="date", all = TRUE)
df <- df[with(df, order(date, status)), ]
head(df)
text_offset <- 0.05
df$month_count <- ave(df$date==df$date, df$date, FUN=cumsum)
df$text_position <- (df$month_count * text_offset * df$direction) + df$position
head(df)
month_buffer <- 2
month_date_range <- seq(min(df$date) - months(month_buffer), max(df$date) + months(month_buffer), by='month')
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(df$date) - months(month_buffer), max(df$date) + months(month_buffer), by='year')
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")
),  origin = "1818-01-01"
)
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
png(filename = "figurasR/hitos.png", width = 800, height = 600)
timeline_plot<-ggplot(df,aes(x=date,y=0, col=status, label=milestone))
timeline_plot<-timeline_plot+labs(col="Hitos")
timeline_plot<-timeline_plot+scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()
# Trazar una línea negra horizontal para la línea de tiempo
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Trazar líneas de segmentos verticales para hitos
timeline_plot<-timeline_plot+geom_segment(data=df[df$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)
# Trazar los puntos de dispersión en cero y la fecha
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=1)
# No muestra los ejes, posiciona apropiadamente la leyenda
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Mostrar el texto de cada mes
#timeline_plot<-timeline_plot+geom_text(data=month_df, #aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, #color='black', angle=90)
# Mostrar el texto del año
#timeline_plot<-timeline_plot+geom_text(data=year_df, #aes(x=year_date_range,y=-0.15,label=year_format, fontface="bold"),size=1.5, #color='black',vjust=0.5, angle=90)
#Mostrar el texto de cada hito
timeline_plot<-timeline_plot+geom_text_repel(aes(y=text_position,label=paste(milestone,year)),size=4.0,key_glyph = "point")
print(timeline_plot)
dev.off()
print(timeline_plot)
knitr::include_graphics("figurasR/hitos.png")
